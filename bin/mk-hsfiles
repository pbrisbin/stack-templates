#!/usr/bin/env stack
-- stack --resolver lts-11.3 --install-ghc runghc -- -Wall -Werror
-- vim: ft=haskell
--
-- Output .hsfiles content for paths sent on stdin.
--
-- Example usage:
--
-- > cd path/to/project
-- > git ls-files | mk-hsfiles > path/to/name.hsfiles
--
{-# LANGUAGE OverloadedStrings #-}

module Main (main) where

import Data.List (sort)
import Data.Monoid ((<>))
import System.IO (hPrint, stderr)

import qualified Control.Exception as E
import qualified Data.Text as T
import qualified Data.Text.IO as T

main :: IO ()
main = mapM_ putHsFile . sort . lines =<< getContents

putHsFile :: FilePath -> IO ()
putHsFile path = either err put =<< try (T.readFile path)
  where
    err = hPrint stderr
    put = T.putStr . (startFile <>)
    startFile = "{-# START_FILE " <> T.pack path <> " #-}\n"

try :: IO a -> IO (Either E.SomeException a)
try = E.try
